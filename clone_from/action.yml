name: Clone a GitHub repository.

inputs:
  owner:
    description: GitHub username who owns the repository.
    default: ${{ github.event.repository.owner.login }}
  repo:
    description: GitHub repo name.
    default: ${{ github.event.repository.name }}
  branch:
    description: Branch to clone.
    default: ${{ github.head_ref }}
  checkout:
    description: Actually checkout the contents of the repository to the disk.
    default: false

runs:
  using: composite

  steps:

  - name: Cloning ${{ inputs.slug }}
    shell: bash
    env:
        GH_TOKEN: ${{ github.token }}
        SLUG: ${{ inputs.owner }}/${{ inputs.repo }}
    run: |
      export GIT_TERMINAL_PROMPT=0
      export GCM_INTERACTIVE=Never

      cd ..

      time rm -rf ${{ inputs.repo }}

      git config --global gc.auto 0
      git config --global fetch.recurseSubmodules false
      git config --global protocol.version 2
      #git config --global core.compression 0

      cat ~/.gitconfig

      # Checkout if needed
      if [[ '${{ inputs.checkout }}' != 'true' ]]; then
        GIT_CLONE_ARGS="--no-checkout"
      fi

      # Clone a blobless repository and don't bother checking it out.
      set -x
      time git clone \
        $GIT_CLONE_ARGS \
        --filter=blob:none \
        --no-tags \
        --origin upstream \
        --branch ${{ inputs.branch }} \
        --verbose \
        https://token:${GH_TOKEN}@github.com/${SLUG}.git
      set +x

      # Enter cloned repository
      cd ${{ inputs.repo }}
      echo
      echo "git status"
      echo "-------------------------------------"
      git status
      echo "-------------------------------------"
      echo
      echo "git branch -v"
      echo "-------------------------------------"
      git branch -v -a
      echo "-------------------------------------"
      echo
      echo "Contents"
      echo "-------------------------------------"
      ls -l .
      echo "-------------------------------------"
