name: Clone from a GitHub repository.

inputs:
  owner:
    description: GitHub username who owns the repository.
    default: ${{ github.event.repository.owner.login }}
  repo:
    description: GitHub repo name.
    default: ${{ github.event.repository.name }}
  branch:
    description: Branch to clone.
    default: ${{ github.head_ref }}
  checkout:
    description: Actually checkout the contents of the repository to the disk.
    default: false

runs:
  using: composite

  steps:

  - name: Cloning ${{ inputs.branch }} from ${{ inputs.owner }}/${{ inputs.repo }}
    shell: bash
    run: |
      export GIT_TERMINAL_PROMPT=0
      export GCM_INTERACTIVE=Never

      if [[ -z "${{ inputs.owner }}"       ]]; then echo "Missing owner value!";       exit 1; fi
      if [[ -z "${{ inputs.repo }}"        ]]; then echo "Missing repo value!";        exit 1; fi
      if [[ -z "${{ inputs.branch }}"      ]]; then echo "Missing branch value!";      exit 1; fi
      if [[ -z "${{ inputs.checkout }}"    ]]; then echo "Missing checkout value!";    exit 1; fi

      cd ..

      time rm -rf "${{ inputs.repo }}"

      git config --global gc.auto 0
      git config --global fetch.recurseSubmodules false
      git config --global protocol.version 2
      #git config --global core.compression 0

      cat ~/.gitconfig

      # Checkout if needed
      export GIT_ARGS=''
      if [[ "x${{ inputs.checkout }}" != 'xtrue' ]]; then
        export GIT_ARGS="--no-checkout"
      fi

      # Clone a blobless repository.
      set -x
      time git clone \
        $GIT_ARGS \
        --filter=blob:none \
        --no-tags \
        --origin upstream \
        --branch "${{ inputs.branch }}" \
        --verbose \
        "https://token:${{ github.token }}@github.com/${{ inputs.owner }}/${{ inputs.repo }}.git"
      set +x

      # Enter cloned repository
      cd "${{ inputs.repo }}"
      ls -l .
