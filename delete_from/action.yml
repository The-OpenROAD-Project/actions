name: Delete branch from a repository.

inputs:
  owner:
    description: GitHub username who owns the repository.
    default: ${{ github.event.repository.owner.name }}
  repo:
    description: GitHub repo name.
    default: ${{ github.event.repository.name }}
  branch:
    description: Branch to push.
    required: true
  deployKey:
    description: SSH private "deploy key" which has write access to staging repository.
    required: true

runs:
  using: composite

  steps:

  - name: Deleting ${{ inputs.branch }} from ${{ inputs.slug }}
    shell: bash
    run: |

      if [[ -z "${{ inputs.owner }}"     ]]; then echo "Missing owner value!"; exit 1; fi
      if [[ -z "${{ inputs.repo }}"      ]]; then echo "Missing repo value!"; exit 1; fi
      if [[ -z "${{ inputs.branch }}"    ]]; then echo "Missing branch value!"; exit 1; fi
      if [[ -z "${{ inputs.deployKey }}" ]]; then echo "Missing deployKey value!"; exit 1; fi

      # Configure ssh to ignore host key checking.
      rm -rf ~/.ssh
      mkdir -p ~/.ssh
      chmod 700 ~/.ssh

      cat > ~/.ssh/config << EOF
      Host *
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null
      EOF

      # Start ssh agent and add deploy key.
      eval $(ssh-agent -s)
      ssh-add - <<< "${{ inputs.deployKey }}"

      # Set the defaultBranch to supress noisy hint.
      git config --global init.defaultBranch main

      # Add local repository and push to it.
      rm -rf ${{ inputs.repo }}
      mkdir -p ${{ inputs.repo }}
      cd ${{ inputs.repo }}
      git init --quiet
      git remote add origin git+ssh://git@github.com/${{ inputs.owner }}/${{ inputs.repo }}.git
      git push origin --verbose :${{ inputs.branch }}
